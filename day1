<!DOCTYPE html>
<html lang="jp">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>three</title>
</head>

<body>
	<div id="stage"></div>
    <script src="three.min.js"></script>
    <script src="OrbitControls.js"></script>
    <script>
		(function() {
			
			var width = 500,
			    height = 500,
				cube = [],
				count = 100,
				i,
				cubeSize;
				
			
			//scene
			var scene = new THREE.Scene(); 
			 
			 
			//mesh1 cube(geometory,material)
			for (i = 0; i < count; i++){
				cubeSize = r(10);
				var geometry = new THREE.CubeGeometry(cubeSize,cubeSize,cubeSize);
				var material = new THREE.MeshLambertMaterial({ color: 0xffffff});
				cube[i] = new THREE.Mesh(geometry, material);
				cube[i].castShadow = true;
				cube[i].position.set(0,-80+r(200),0);//rotate,scale
				scene.add(cube[i]);
			}
			
			
			//mesh2 sphere(geometory,material)
			//var pGeometry = new THREE.PlaneGeometry(300,300);
			//var pMaterial = new THREE.MeshLambertMaterial({ color: 0x009696,side:THREE.DoubleSide });
			//var plane = new THREE.Mesh(pGeometry, pMaterial);
			//plane.receiveShadow = true;
			//plane.position.set(0,0,0);
			//plane.rotation.x = 90 * Math.PI / 180;
			//scene.add(plane);
			
						
			//light
			var light = new THREE.DirectionalLight(0xffffff, 1);
			light.position.set(0, 100, 30);
			light.castShadow = true;
			scene.add(light);
			//lightの環境光
			var ambient = new THREE.AmbientLight(0xe5e5e5, 0.2);
			scene.add(ambient);
			
			
			//camera
			var camera = new THREE.PerspectiveCamera(45, width / height, 1,1000);
			camera.position.set(0,300,500);
			//camera.lookAt(cube.position);
			
			
			//helper
			//var axis = new THREE.AxisHelper(1000);
			//axis.position.set(0,0,0);
			//scene.add(axis);
			
			
			//rendering
			var renderer = new THREE.WebGLRenderer();
			renderer.setSize(width, height);
			renderer.setClearColor(0xeeeeee, 1);
			renderer.shadowMapEnabled = true;
			document.getElementById('stage').appendChild(renderer.domElement);
			
				
			//control
			var controls = new THREE.OrbitControls(camera, renderer.domElement);
			
			
			//rendering アニメーションさせる
			function render(){
				requestAnimationFrame(render);
				for (i = 0; i < count; i++){
					cube[i].rotation.x += 100+i * Math.PI / 180;
					cube[i].rotation.y += 100+i * Math.PI / 180;
					cube[i].rotation.z += 100+i * Math.PI / 180;
					cube[i].position.x = Math.sin(new Date().getTime() / 300+i) * 100;
					cube[i].position.z = Math.cos(new Date().getTime() / 300+i) * 100;
					}

				renderer.render(scene, camera);
				
				}
				
			render();
			
			function r(n) {
				return Math.floor(Math.random() * (n + 1));
				
				}
			
			
			})();
    </script>
</body>
</html>
